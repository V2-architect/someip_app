// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: float_exchange.proto

#include "float_exchange.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace floatexchange {
class FloatRequestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FloatRequest>
      _instance;
} _FloatRequest_default_instance_;
class FloatResponseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FloatResponse>
      _instance;
} _FloatResponse_default_instance_;
}  // namespace floatexchange
namespace protobuf_float_5fexchange_2eproto {
static void InitDefaultsFloatRequest() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::floatexchange::_FloatRequest_default_instance_;
    new (ptr) ::floatexchange::FloatRequest();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::floatexchange::FloatRequest::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FloatRequest =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFloatRequest}, {}};

static void InitDefaultsFloatResponse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::floatexchange::_FloatResponse_default_instance_;
    new (ptr) ::floatexchange::FloatResponse();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::floatexchange::FloatResponse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_FloatResponse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsFloatResponse}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_FloatRequest.base);
  ::google::protobuf::internal::InitSCC(&scc_info_FloatResponse.base);
}

::google::protobuf::Metadata file_level_metadata[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::floatexchange::FloatRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::floatexchange::FloatRequest, num1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::floatexchange::FloatRequest, num2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::floatexchange::FloatRequest, num3_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::floatexchange::FloatResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::floatexchange::FloatResponse, result1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::floatexchange::FloatResponse, result2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::floatexchange::FloatResponse, result3_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::floatexchange::FloatRequest)},
  { 8, -1, sizeof(::floatexchange::FloatResponse)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::floatexchange::_FloatRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::floatexchange::_FloatResponse_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "float_exchange.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\024float_exchange.proto\022\rfloatexchange\"8\n"
      "\014FloatRequest\022\014\n\004num1\030\001 \001(\002\022\014\n\004num2\030\002 \001("
      "\002\022\014\n\004num3\030\003 \001(\002\"B\n\rFloatResponse\022\017\n\007resu"
      "lt1\030\001 \001(\002\022\017\n\007result2\030\002 \001(\002\022\017\n\007result3\030\003 "
      "\001(\0022X\n\rFloatExchange\022G\n\nSendFloats\022\033.flo"
      "atexchange.FloatRequest\032\034.floatexchange."
      "FloatResponseb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 261);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "float_exchange.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_float_5fexchange_2eproto
namespace floatexchange {

// ===================================================================

void FloatRequest::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FloatRequest::kNum1FieldNumber;
const int FloatRequest::kNum2FieldNumber;
const int FloatRequest::kNum3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FloatRequest::FloatRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_float_5fexchange_2eproto::scc_info_FloatRequest.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:floatexchange.FloatRequest)
}
FloatRequest::FloatRequest(const FloatRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&num1_, &from.num1_,
    static_cast<size_t>(reinterpret_cast<char*>(&num3_) -
    reinterpret_cast<char*>(&num1_)) + sizeof(num3_));
  // @@protoc_insertion_point(copy_constructor:floatexchange.FloatRequest)
}

void FloatRequest::SharedCtor() {
  ::memset(&num1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num3_) -
      reinterpret_cast<char*>(&num1_)) + sizeof(num3_));
}

FloatRequest::~FloatRequest() {
  // @@protoc_insertion_point(destructor:floatexchange.FloatRequest)
  SharedDtor();
}

void FloatRequest::SharedDtor() {
}

void FloatRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FloatRequest::descriptor() {
  ::protobuf_float_5fexchange_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_float_5fexchange_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FloatRequest& FloatRequest::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_float_5fexchange_2eproto::scc_info_FloatRequest.base);
  return *internal_default_instance();
}


void FloatRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:floatexchange.FloatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&num1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num3_) -
      reinterpret_cast<char*>(&num1_)) + sizeof(num3_));
  _internal_metadata_.Clear();
}

bool FloatRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:floatexchange.FloatRequest)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float num1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &num1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float num2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &num2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float num3 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &num3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:floatexchange.FloatRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:floatexchange.FloatRequest)
  return false;
#undef DO_
}

void FloatRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:floatexchange.FloatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float num1 = 1;
  if (this->num1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->num1(), output);
  }

  // float num2 = 2;
  if (this->num2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->num2(), output);
  }

  // float num3 = 3;
  if (this->num3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->num3(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:floatexchange.FloatRequest)
}

::google::protobuf::uint8* FloatRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:floatexchange.FloatRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float num1 = 1;
  if (this->num1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->num1(), target);
  }

  // float num2 = 2;
  if (this->num2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->num2(), target);
  }

  // float num3 = 3;
  if (this->num3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->num3(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:floatexchange.FloatRequest)
  return target;
}

size_t FloatRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:floatexchange.FloatRequest)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float num1 = 1;
  if (this->num1() != 0) {
    total_size += 1 + 4;
  }

  // float num2 = 2;
  if (this->num2() != 0) {
    total_size += 1 + 4;
  }

  // float num3 = 3;
  if (this->num3() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FloatRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:floatexchange.FloatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FloatRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FloatRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:floatexchange.FloatRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:floatexchange.FloatRequest)
    MergeFrom(*source);
  }
}

void FloatRequest::MergeFrom(const FloatRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:floatexchange.FloatRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.num1() != 0) {
    set_num1(from.num1());
  }
  if (from.num2() != 0) {
    set_num2(from.num2());
  }
  if (from.num3() != 0) {
    set_num3(from.num3());
  }
}

void FloatRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:floatexchange.FloatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FloatRequest::CopyFrom(const FloatRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:floatexchange.FloatRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FloatRequest::IsInitialized() const {
  return true;
}

void FloatRequest::Swap(FloatRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FloatRequest::InternalSwap(FloatRequest* other) {
  using std::swap;
  swap(num1_, other->num1_);
  swap(num2_, other->num2_);
  swap(num3_, other->num3_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FloatRequest::GetMetadata() const {
  protobuf_float_5fexchange_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_float_5fexchange_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FloatResponse::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FloatResponse::kResult1FieldNumber;
const int FloatResponse::kResult2FieldNumber;
const int FloatResponse::kResult3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FloatResponse::FloatResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_float_5fexchange_2eproto::scc_info_FloatResponse.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:floatexchange.FloatResponse)
}
FloatResponse::FloatResponse(const FloatResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&result1_, &from.result1_,
    static_cast<size_t>(reinterpret_cast<char*>(&result3_) -
    reinterpret_cast<char*>(&result1_)) + sizeof(result3_));
  // @@protoc_insertion_point(copy_constructor:floatexchange.FloatResponse)
}

void FloatResponse::SharedCtor() {
  ::memset(&result1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result3_) -
      reinterpret_cast<char*>(&result1_)) + sizeof(result3_));
}

FloatResponse::~FloatResponse() {
  // @@protoc_insertion_point(destructor:floatexchange.FloatResponse)
  SharedDtor();
}

void FloatResponse::SharedDtor() {
}

void FloatResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* FloatResponse::descriptor() {
  ::protobuf_float_5fexchange_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_float_5fexchange_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FloatResponse& FloatResponse::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_float_5fexchange_2eproto::scc_info_FloatResponse.base);
  return *internal_default_instance();
}


void FloatResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:floatexchange.FloatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&result1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result3_) -
      reinterpret_cast<char*>(&result1_)) + sizeof(result3_));
  _internal_metadata_.Clear();
}

bool FloatResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:floatexchange.FloatResponse)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float result1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &result1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float result2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &result2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float result3 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &result3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:floatexchange.FloatResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:floatexchange.FloatResponse)
  return false;
#undef DO_
}

void FloatResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:floatexchange.FloatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float result1 = 1;
  if (this->result1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(1, this->result1(), output);
  }

  // float result2 = 2;
  if (this->result2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->result2(), output);
  }

  // float result3 = 3;
  if (this->result3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->result3(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:floatexchange.FloatResponse)
}

::google::protobuf::uint8* FloatResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:floatexchange.FloatResponse)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float result1 = 1;
  if (this->result1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(1, this->result1(), target);
  }

  // float result2 = 2;
  if (this->result2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->result2(), target);
  }

  // float result3 = 3;
  if (this->result3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->result3(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:floatexchange.FloatResponse)
  return target;
}

size_t FloatResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:floatexchange.FloatResponse)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // float result1 = 1;
  if (this->result1() != 0) {
    total_size += 1 + 4;
  }

  // float result2 = 2;
  if (this->result2() != 0) {
    total_size += 1 + 4;
  }

  // float result3 = 3;
  if (this->result3() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FloatResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:floatexchange.FloatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FloatResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FloatResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:floatexchange.FloatResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:floatexchange.FloatResponse)
    MergeFrom(*source);
  }
}

void FloatResponse::MergeFrom(const FloatResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:floatexchange.FloatResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result1() != 0) {
    set_result1(from.result1());
  }
  if (from.result2() != 0) {
    set_result2(from.result2());
  }
  if (from.result3() != 0) {
    set_result3(from.result3());
  }
}

void FloatResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:floatexchange.FloatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FloatResponse::CopyFrom(const FloatResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:floatexchange.FloatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FloatResponse::IsInitialized() const {
  return true;
}

void FloatResponse::Swap(FloatResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FloatResponse::InternalSwap(FloatResponse* other) {
  using std::swap;
  swap(result1_, other->result1_);
  swap(result2_, other->result2_);
  swap(result3_, other->result3_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata FloatResponse::GetMetadata() const {
  protobuf_float_5fexchange_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_float_5fexchange_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace floatexchange
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::floatexchange::FloatRequest* Arena::CreateMaybeMessage< ::floatexchange::FloatRequest >(Arena* arena) {
  return Arena::CreateInternal< ::floatexchange::FloatRequest >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::floatexchange::FloatResponse* Arena::CreateMaybeMessage< ::floatexchange::FloatResponse >(Arena* arena) {
  return Arena::CreateInternal< ::floatexchange::FloatResponse >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
